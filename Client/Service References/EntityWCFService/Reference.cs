//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestApp.Client.EntityWCFService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EntityWCFService.IEntityWCFService")]
    public interface IEntityWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityWCFService/GetById", ReplyAction="http://tempuri.org/IEntityWCFService/GetByIdResponse")]
        TestApp.Entity.EntityObject GetById(string typeName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityWCFService/GetById", ReplyAction="http://tempuri.org/IEntityWCFService/GetByIdResponse")]
        System.Threading.Tasks.Task<TestApp.Entity.EntityObject> GetByIdAsync(string typeName, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityWCFService/GetByTemplate", ReplyAction="http://tempuri.org/IEntityWCFService/GetByTemplateResponse")]
        TestApp.Entity.EntityObject[] GetByTemplate(string typeName, TestApp.Entity.EntityObject template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityWCFService/GetByTemplate", ReplyAction="http://tempuri.org/IEntityWCFService/GetByTemplateResponse")]
        System.Threading.Tasks.Task<TestApp.Entity.EntityObject[]> GetByTemplateAsync(string typeName, TestApp.Entity.EntityObject template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityWCFService/GetAll", ReplyAction="http://tempuri.org/IEntityWCFService/GetAllResponse")]
        TestApp.Entity.EntityObject[] GetAll(string typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEntityWCFService/GetAll", ReplyAction="http://tempuri.org/IEntityWCFService/GetAllResponse")]
        System.Threading.Tasks.Task<TestApp.Entity.EntityObject[]> GetAllAsync(string typeName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEntityWCFServiceChannel : TestApp.Client.EntityWCFService.IEntityWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityWCFServiceClient : System.ServiceModel.ClientBase<TestApp.Client.EntityWCFService.IEntityWCFService>, TestApp.Client.EntityWCFService.IEntityWCFService {
        
        public EntityWCFServiceClient() {
        }
        
        public EntityWCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EntityWCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntityWCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EntityWCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestApp.Entity.EntityObject GetById(string typeName, int id) {
            return base.Channel.GetById(typeName, id);
        }
        
        public System.Threading.Tasks.Task<TestApp.Entity.EntityObject> GetByIdAsync(string typeName, int id) {
            return base.Channel.GetByIdAsync(typeName, id);
        }
        
        public TestApp.Entity.EntityObject[] GetByTemplate(string typeName, TestApp.Entity.EntityObject template) {
            return base.Channel.GetByTemplate(typeName, template);
        }
        
        public System.Threading.Tasks.Task<TestApp.Entity.EntityObject[]> GetByTemplateAsync(string typeName, TestApp.Entity.EntityObject template) {
            return base.Channel.GetByTemplateAsync(typeName, template);
        }
        
        public TestApp.Entity.EntityObject[] GetAll(string typeName) {
            return base.Channel.GetAll(typeName);
        }
        
        public System.Threading.Tasks.Task<TestApp.Entity.EntityObject[]> GetAllAsync(string typeName) {
            return base.Channel.GetAllAsync(typeName);
        }
    }
}
